=========== FROM MEDIUM

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;  

    keepalive_timeout  65;

    gzip on;
    gzip_types application/javascript;
    gzip_buffers 32 8k;

    server {
        listen       80;
        server_name  localhost;       
		
		root   /usr/share/nginx/html;
		
        server_tokens off;		

        location ~ /index.html|.*\.json$ {
          expires -1;        
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
          include /etc/nginx/security-headers.conf;        
        }

        location ~ .*\.css$|.*\.js$ {               
          add_header Cache-Control 'max-age=31449600'; # one year        
          include /etc/nginx/security-headers.conf;        
        }

        location / {
		  try_files $uri$args $uri$args/ /index.html;
          
          add_header Cache-Control 'max-age=86400'; # one day
          include /etc/nginx/security-headers.conf;       
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }
}


============================ 401

server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key; 

	location ~ /index.html|.*\.json$ {
	  expires -1;        
	  add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
	  include /etc/nginx/security-headers.conf;        
	}

	location ~ .*\.css$|.*\.js$ {               
	  add_header Cache-Control 'max-age=31449600'; # one year        
	  include /etc/nginx/security-headers.conf;        
	}

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}


=============================== good.. not not cached

server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key; 

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}


============================ container not starting

server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key; 

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        try_files $uri $uri/ /index.html;
    }

    location ~ /index.html|.*\.json$ {
      expires -1;        
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      include /etc/nginx/security-headers.conf;        
    }

    location ~ .*\.css$|.*\.js$ {               
      add_header Cache-Control 'max-age=31449600'; # one year        
      include /etc/nginx/security-headers.conf;        
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

=========  container not starting
bash-4.4# cat nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
bash-4.4# cat conf.d/default.conf
server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
bash-4.4#

==================================

bash-4.4# cat ./etc/nginx/conf.d/default.conf
server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key;

        location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}


=============== dev1 container stable configurations

bash-4.4# cat ./etc/nginx/conf.d/default.conf
server {
    listen 443          ssl http2 default_server;
    listen [::]:443     ssl http2 default_server;
    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key;

        location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                try_files $uri $uri/ /index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
bash-4.4# cat ./etc/nginx/nginx.conf

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

=============== local (ubuntu) stable configs
# /conf.d/default.conf
server {
#    listen 443          ssl http2 default_server;
#    listen [::]:443     ssl http2 default_server;
#    ssl_certificate         /etc/pki/cotiviti/cotiviti.com.crt;
#    ssl_certificate_key     /etc/pki/cotiviti/cotiviti.com.key;

	root   /var/www/html/my-app;

	location ~ /index.html|.*\.json$ {
		expires -1;        
		add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
		#      include /etc/nginx/security-headers.conf;
	}

	location ~ .*\.css$|.*\.js$ {
		add_header Cache-Control 'max-age=31449600'; # one year
		include /etc/nginx/security-headers.conf;
	}

	location / {
		try_files $uri$args $uri$args/ /index.html;

		add_header Cache-Control 'max-age=86400'; # one day
		include /etc/nginx/security-headers.conf;
	}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# nginx.conf
user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

# /etc/nginx/security-headers.conf
add_header Strict-Transport-Security "max-age=31449600; includeSubDomains" always;    
add_header Content-Security-Policy "object-src 'none'; script-src 'self'; script-src-elem 'self'; base-uri 'self'; require-trusted-types-for 'script'" always;
add_header X-Frame-Options "DENY" always;	
add_header X-Content-Type-Options "nosniff" always;
add_header Referrer-Policy "strict-origin" always;
add_header Feature-Policy "microphone 'none'; geolocation 'none'; camera 'none'" always;
